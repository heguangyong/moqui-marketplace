/*
 * This software is in the public domain under CC0 1.0 Universal plus a
 * Grant of Patent License.
 */

apply plugin: 'groovy'

def componentNode = parseComponent(project)
version = componentNode.'@version'
def jarBaseName = componentNode.'@name'
def moquiDir = projectDir.parentFile.parentFile.parentFile
def frameworkDir = file(moquiDir.absolutePath + '/framework')

repositories {
    flatDir name: 'localLib', dirs: frameworkDir.absolutePath + '/lib'
    flatDir name: 'librepo', dirs: projectDir.absolutePath + '/librepo'
    mavenCentral()
}

// Log4J has annotation processors, disable to avoid warning
tasks.withType(JavaCompile) {
    options.compilerArgs << "-proc:none"
    options.encoding = 'UTF-8'
}
tasks.withType(GroovyCompile) {
    options.compilerArgs << "-proc:none"
}

dependencies {
    implementation project(':framework')
    // Note: mantle-udm and mantle-usl dependencies are handled by component.xml
}

// by default the Java plugin runs test on build, change to not do that (only run test if explicit task)
check.dependsOn.clear()

task cleanLib(type: Delete) { delete fileTree(dir: projectDir.absolutePath+'/lib', include: '*') }
clean.dependsOn cleanLib

jar {
    destinationDirectory = file(projectDir.absolutePath + '/lib')
    archiveBaseName = jarBaseName
    manifest {
        attributes(
            'Implementation-Title': 'Moqui Marketplace Component',
            'Implementation-Version': version
        )
    }
}

task copyDependencies { doLast {
    copy {
        from (configurations.runtimeClasspath - project(':framework').configurations.runtimeClasspath - project(':framework').jar.archiveFile)
        into file(projectDir.absolutePath + '/lib')
        exclude '**/moqui-framework*.jar'
        exclude '**/moqui-util*.jar'
    }
} }
copyDependencies.dependsOn cleanLib
jar.dependsOn copyDependencies